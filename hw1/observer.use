
model Observer

-- classes

class MagazineSubscription
attributes
    subscriberCollection:String
operations
    registerSubscriber()
    begin
    end
    unregisterSubscriber()
    begin
    end
    notifySubscriber()
    begin
    end
end

class NewspaperSubscription
attributes
    subscriberCollection:String
operations
    registerSubscriber() : NewspaperSubscription
    begin
        declare n:NewspaperSubscription;
        result := n;
    end
    unregisterSubscriber()
    begin
    end
    notifySubscriber()
    begin
    end
end

class MovieSubscription
attributes
    subscriberCollection:String
operations
    registerSubscriber()
    begin
    end
    unregisterSubscriber()
    begin
    end
    notifySubscriber()
    begin
    end
end

class Subscriber
attributes
operations
    register(name:String)
    begin
        --declare n:NewspaperSubscription;
        --n := self.newspaperSubscription.registerSubscriber();
    end
    unregister()
    begin
    end
    notify()
    begin
    end
end

class SubscriberA < Subscriber
attributes
operations
end

class SubscriberB < Subscriber
attributes
operations
end

-- associations

aggregation magazine between
    MagazineSubscription[0..1] role magazineSubscription
    Subscriber[*] role magazineSubscriber
end

aggregation movie between
    MovieSubscription[0..1] role movieSubscription
    Subscriber[*] role movieSubscriber
end

aggregation newspaper between
    NewspaperSubscription[0..1] role newspaperSubscription
    Subscriber[*] role newspaperSubscriber
end
